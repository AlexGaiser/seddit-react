{"ast":null,"code":"import _defineProperty from \"/Users/alexandergaiser/alexgaisergit/django_react/VenvDjango/client/django-react/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/alexandergaiser/alexgaisergit/django_react/VenvDjango/client/django-react/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/alexandergaiser/alexgaisergit/django_react/VenvDjango/client/django-react/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/alexandergaiser/alexgaisergit/django_react/VenvDjango/client/django-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/alexandergaiser/alexgaisergit/django_react/VenvDjango/client/django-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/alexandergaiser/alexgaisergit/django_react/VenvDjango/client/django-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/alexandergaiser/alexgaisergit/django_react/VenvDjango/client/django-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/alexandergaiser/alexgaisergit/django_react/VenvDjango/client/django-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/alexandergaiser/alexgaisergit/django_react/VenvDjango/client/django-react/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Axios from 'axios';\nimport Loader from './Loader';\nimport redditLogo from './Reddit_logo_full_1.png';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, sublist, subcount;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return Axios.get('/reddit/getsublist');\n\n            case 2:\n              response = _context.sent;\n              console.log(response.data);\n              sublist = _this.redditList(response.data.posts);\n              subcount = response.data.count;\n              console.log(response.data);\n\n              _this.setState({\n                isLoaded: true,\n                sideLoaded: true,\n                sublist: sublist,\n                subcount: subcount\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.redditList = function (list) {\n      var sublist = list.map(function (sub) {\n        return React.createElement(\"div\", {\n          className: \"sidebar-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, \"r/\".concat(sub.subreddit));\n      });\n      return sublist;\n    };\n\n    _this.handleChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.searchData =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(event) {\n        var response, _response$data$sentim, subjectivity, polarity, sentimentData, recordCount, polMessage;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n\n                _this.setState({\n                  isLoaded: false\n                });\n\n                _context2.next = 4;\n                return Axios.get(\"/reddit/search=\".concat(_this.state.searchWord));\n\n              case 4:\n                response = _context2.sent;\n                console.log(response.data);\n                _response$data$sentim = response.data.sentiment, subjectivity = _response$data$sentim.subjectivity, polarity = _response$data$sentim.polarity;\n                sentimentData = React.createElement(\"h1\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 48\n                  },\n                  __self: this\n                }, \"Polarity: \", (polarity * 100).toFixed(2), \" | Subjectivity: \", (subjectivity * 100).toFixed(2));\n                recordCount = response.data.count;\n                polMessage = _this.sentimentMessage(polarity, subjectivity);\n\n                _this.setState({\n                  sentimentData: sentimentData,\n                  recordCount: recordCount,\n                  isLoaded: true,\n                  polMessage: polMessage\n                });\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.fetchData =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(event) {\n        var response, _response$data$sentim2, subjectivity, polarity, sentimentData, recordCount, polMessage;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _this.setState({\n                  isLoaded: false\n                });\n\n                event.preventDefault();\n                _context3.next = 4;\n                return Axios.get(\"/reddit/subreddit=\".concat(_this.state.searchBox));\n\n              case 4:\n                response = _context3.sent;\n                console.log(response.data);\n                _response$data$sentim2 = response.data.sentiment, subjectivity = _response$data$sentim2.subjectivity, polarity = _response$data$sentim2.polarity;\n                sentimentData = React.createElement(\"h1\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 65\n                  },\n                  __self: this\n                }, \"Polarity: \", (polarity * 100).toFixed(2), \" | Subjectivity: \", (subjectivity * 100).toFixed(2));\n                recordCount = response.data.count;\n                polMessage = _this.sentimentMessage(polarity, subjectivity);\n\n                _this.setState({\n                  sentimentData: sentimentData,\n                  recordCount: recordCount,\n                  isLoaded: true,\n                  polMessage: polMessage\n                });\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.sentimentMessage = function (polarity, subjectivity) {\n      var polMessage = '';\n\n      if (polarity > .1) {\n        polMessage = 'This result indicates a very positive sentiment rating';\n      } else if (polarity > .075) {\n        polMessage = 'This result indicates an above average positive sentiment rating';\n      } else if (polarity >= .06) {\n        polMessage = 'This result has a neutral sentiment rating';\n      } else if (polarity < .06) {\n        polMessage = 'This result has a slightly negative sentiment rating';\n      } else if (polarity < .035) {\n        polMessage = 'This result has a very negative sentiment rating';\n      }\n\n      var subMessage = '';\n\n      if (subjectivity > .34) {\n        subMessage = 'content that is subjective.';\n      } else if (subjectivity <= .34) {\n        subMessage = 'content that is objective.';\n      }\n\n      return \"\".concat(polMessage, \" and \").concat(subMessage);\n    };\n\n    _this.state = {\n      isLoaded: false,\n      sideLoaded: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"app-main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: redditLogo,\n        alt: \"reddit-logo\",\n        className: \"reddit-logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"search-field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.searchData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Search By Keyword:\"), React.createElement(\"input\", {\n        className: \"search-input\",\n        name: \"searchWord\",\n        placeholder: \"search\",\n        type: \"text\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"search-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Submit\")), React.createElement(\"form\", {\n        onSubmit: this.fetchData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Search By Subreddit:\"), React.createElement(\"input\", {\n        name: \"searchBox\",\n        placeholder: \"choose a subreddit\",\n        type: \"text\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Submit\"))), React.createElement(\"div\", {\n        className: \"results-field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"records-sampled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Records sampled: \", this.state.isLoaded && this.state.recordCount), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, this.state.isLoaded ? this.state.sentimentData : React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        className: \"polMessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, this.state.isLoaded && this.state.polMessage))), React.createElement(\"div\", {\n        className: \"sidebar-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"subcount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Subreddits: \", this.state.isLoaded && this.state.subcount), this.state.isLoaded && this.state.sublist));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/alexandergaiser/alexgaisergit/django_react/VenvDjango/client/django-react/src/App.js"],"names":["React","Component","Axios","Loader","redditLogo","App","props","componentDidMount","get","response","console","log","data","sublist","redditList","posts","subcount","count","setState","isLoaded","sideLoaded","list","map","sub","subreddit","handleChange","event","target","name","value","searchData","preventDefault","state","searchWord","sentiment","subjectivity","polarity","sentimentData","toFixed","recordCount","polMessage","sentimentMessage","fetchData","searchBox","subMessage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Axios from 'axios'\nimport Loader from './Loader'\nimport redditLogo from './Reddit_logo_full_1.png'\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isLoaded: false,\n            sideLoaded: false\n        }\n    }\n\n    componentDidMount= async ()=>{\n        const response = await Axios.get('/reddit/getsublist')\n        console.log(response.data)\n        const sublist = this.redditList(response.data.posts)\n        const subcount = response.data.count \n        console.log(response.data);\n        this.setState({\n            isLoaded: true,\n            sideLoaded: true,\n            sublist: sublist,\n            subcount: subcount\n        })\n    }\n    redditList = (list)=>{\n        const sublist = list.map((sub)=>{\n            return <div className =\"sidebar-item\" >{`r/${sub.subreddit}`}</div>\n        })\n        return sublist\n    }\n\n    handleChange=(event)=>{\n        const {name,value} = event.target\n        this.setState({[name]:value})\n    }\n    searchData= async(event)=>{\n        event.preventDefault()\n        this.setState({isLoaded:false})\n        const response = await Axios.get(`/reddit/search=${this.state.searchWord}`)\n        console.log(response.data);\n        const {subjectivity, polarity} = response.data.sentiment\n        const sentimentData = <h1>Polarity: {(polarity*100).toFixed(2)} | Subjectivity: {(subjectivity*100).toFixed(2)}</h1>\n        const recordCount = response.data.count\n        const polMessage = this.sentimentMessage(polarity, subjectivity)\n        this.setState({ \n            sentimentData: sentimentData,\n            recordCount: recordCount,\n            isLoaded: true,\n            polMessage: polMessage\n                        })\n    }\n\n    fetchData = async(event) =>{\n        this.setState({isLoaded:false})\n        event.preventDefault()\n        const response = await Axios.get(`/reddit/subreddit=${this.state.searchBox}`)\n        console.log(response.data)\n        const {subjectivity, polarity} = response.data.sentiment\n        const sentimentData = <h1>Polarity: {(polarity*100).toFixed(2)} | Subjectivity: {(subjectivity*100).toFixed(2)}</h1>\n        const recordCount = response.data.count\n\n        const polMessage = this.sentimentMessage(polarity, subjectivity)\n        this.setState({ \n            sentimentData: sentimentData,\n            recordCount: recordCount,\n            isLoaded: true,\n            polMessage: polMessage\n                        })\n    }\n    sentimentMessage=(polarity, subjectivity)=>{\n        let polMessage = ''\n        if(polarity > .1){\n            polMessage = 'This result indicates a very positive sentiment rating'\n        }\n        else if(polarity>.075){\n            polMessage = 'This result indicates an above average positive sentiment rating'\n        } \n        else if(polarity >=.06){\n            polMessage = 'This result has a neutral sentiment rating'\n        }\n        else if(polarity < .06){\n            polMessage = 'This result has a slightly negative sentiment rating'\n        }\n        else if(polarity < .035){\n            polMessage = 'This result has a very negative sentiment rating'\n        }\n\n        let subMessage = ''\n        if (subjectivity> .34){\n            subMessage = 'content that is subjective.'\n        }\n        else if(subjectivity <= .34){\n            subMessage = 'content that is objective.'\n        }\n\n        return `${polMessage} and ${subMessage}`\n    }\n\nrender() {\n    return (\n      <div className=\"App\">\n        <div className=\"app-main\">\n            <img src={redditLogo} alt ='reddit-logo' className=\"reddit-logo\"/>\n            \n            <div className=\"search-field\">\n                <form onSubmit={this.searchData}>\n                    <h3>Search By Keyword:</h3>\n                        <input className=\"search-input\"\n                            name = \"searchWord\" \n                            placeholder=\"search\" \n                            type = \"text\" \n                            onChange={this.handleChange}\n                        />\n                    <button className=\"search-button\">Submit</button>\n                </form>\n                <form onSubmit={this.fetchData}>\n                <h3>Search By Subreddit:</h3>\n                    <input\n                        name = \"searchBox\" \n                        placeholder=\"choose a subreddit\" \n                        type = \"text\" \n                        onChange={this.handleChange}\n                    />\n                    <button>Submit</button>\n                </form>\n                </div>\n            <div className= \"results-field\">\n                <div className=\"records-sampled\">Records sampled: {this.state.isLoaded && this.state.recordCount}</div>\n                <div>{this.state.isLoaded ? this.state.sentimentData : <Loader/>}</div>\n                <p className=\"polMessage\">{this.state.isLoaded && this.state.polMessage}</p>\n            </div>\n        </div>\n        \n            \n            \n            <div className=\"sidebar-container\">\n\n                    <h4 className=\"subcount\">Subreddits: {this.state.isLoaded && this.state.subcount}</h4>\n                \n                    {this.state.isLoaded && this.state.sublist}\n            </div>\n        </div>\n    );\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}