{"ast":null,"code":"import _regeneratorRuntime from \"/Users/alexandergaiser/alexgaisergit/django_react/VenvDjango/client/django-react/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/alexandergaiser/alexgaisergit/django_react/VenvDjango/client/django-react/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/alexandergaiser/alexgaisergit/django_react/VenvDjango/client/django-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/alexandergaiser/alexgaisergit/django_react/VenvDjango/client/django-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/alexandergaiser/alexgaisergit/django_react/VenvDjango/client/django-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/alexandergaiser/alexgaisergit/django_react/VenvDjango/client/django-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/alexandergaiser/alexgaisergit/django_react/VenvDjango/client/django-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/alexandergaiser/alexgaisergit/django_react/VenvDjango/client/django-react/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Axios from 'axios';\nimport Loader from './Loader';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, redditPosts;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return Axios.get('/reddit/main');\n\n            case 2:\n              response = _context.sent;\n              redditPosts = response.data.data.map(function (item) {\n                return React.createElement(\"div\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 19\n                  },\n                  __self: this\n                }, React.createElement(\"h3\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 20\n                  },\n                  __self: this\n                }, item.title));\n              });\n              console.log(response.data);\n\n              _this.setState({\n                posts: redditPosts,\n                isLoaded: true\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.handleChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    };\n\n    _this.fetchData =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log('getting data');\n              _context2.next = 3;\n              return Axios.get('/reddit/getdata');\n\n            case 3:\n              response = _context2.sent;\n              console.log(response.data);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    _this.state = {\n      isLoaded: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, this.state.isLoaded ? this.state.posts : React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }))), React.createElement(\"button\", {\n        onClick: this.fetchData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Get Data \"));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/alexandergaiser/alexgaisergit/django_react/VenvDjango/client/django-react/src/App.js"],"names":["React","Component","Axios","Loader","App","props","componentDidMount","get","response","redditPosts","data","map","item","title","console","log","setState","posts","isLoaded","handleChange","event","target","name","value","fetchData","state"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;IAEMC,G;;;;;AACF,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,6EAAMA,KAAN;AADe,UAOnBC,iBAPmB;AAAA;AAAA;AAAA;AAAA,6BAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACQJ,KAAK,CAACK,GAAN,CAAU,cAAV,CADR;;AAAA;AACTC,cAAAA,QADS;AAETC,cAAAA,WAFS,GAEKD,QAAQ,CAACE,IAAT,CAAcA,IAAd,CAAmBC,GAAnB,CAAuB,UAACC,IAAD,EAAQ;AAC/C,uBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAKA,IAAI,CAACC,KAAV,CADJ,CADJ;AAKH,eANmB,CAFL;AAUfC,cAAAA,OAAO,CAACC,GAAR,CAAYP,QAAQ,CAACE,IAArB;;AACA,oBAAKM,QAAL,CAAc;AACVC,gBAAAA,KAAK,EAAER,WADG;AAEVS,gBAAAA,QAAQ,EAAE;AAFA,eAAd;;AAXe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAPA;;AAAA,UAuBnBC,YAvBmB,GAuBN,UAACC,KAAD,EAAS;AAAA,0BACGA,KAAK,CAACC,MADT;AAAA,UACXC,IADW,iBACXA,IADW;AAAA,UACNC,KADM,iBACNA,KADM;AAErB,KAzBkB;;AAAA,UA4BnBC,SA5BmB;AAAA;AAAA;AAAA;AAAA,6BA4BR;AAAA;AAAA;AAAA;AAAA;AAAA;AACPV,cAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AADO;AAAA,qBAEgBb,KAAK,CAACK,GAAN,CAAU,iBAAV,CAFhB;;AAAA;AAEDC,cAAAA,QAFC;AAGPM,cAAAA,OAAO,CAACC,GAAR,CAAYP,QAAQ,CAACE,IAArB;;AAHO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA5BQ;AAEf,UAAKe,KAAL,GAAa;AACTP,MAAAA,QAAQ,EAAC;AADA,KAAb;AAFe;AAKlB;;;;6BA6BI;AACL,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKO,KAAL,CAAWP,QAAX,GAAsB,KAAKO,KAAL,CAAWR,KAAjC,GAAyC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA/C,CADJ,CADF,EAIE;AAAQ,QAAA,OAAO,EAAE,KAAKO,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJF,CADF;AAQD;;;;EA5CevB,S;;AAgDlB,eAAeG,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Axios from 'axios'\nimport Loader from './Loader'\n\nclass App extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isLoaded:false\n        }\n    }\n\n    componentDidMount= async ()=>{\n        const response = await Axios.get('/reddit/main')\n        const redditPosts = response.data.data.map((item)=>{\n            return(\n                <div>\n                    <h3>{item.title}</h3>\n                </div>\n            )\n        })\n\n        console.log(response.data);\n        this.setState({\n            posts: redditPosts,\n            isLoaded: true\n        })\n    }\n    handleChange=(event)=>{\n        const {name,value} = event.target\n    }\n\n\n    fetchData= async ()=>{\n        console.log('getting data')\n        const response = await Axios.get('/reddit/getdata')\n        console.log(response.data)\n    }\n\nrender() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n            <div>{this.state.isLoaded ? this.state.posts : <Loader/>}</div>\n        </header>\n        <button onClick={this.fetchData}>Get Data </button>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}