{"ast":null,"code":"import _defineProperty from \"/Users/alexandergaiser/alexgaisergit/django_react/VenvDjango/client/django-react/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/alexandergaiser/alexgaisergit/django_react/VenvDjango/client/django-react/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/alexandergaiser/alexgaisergit/django_react/VenvDjango/client/django-react/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/alexandergaiser/alexgaisergit/django_react/VenvDjango/client/django-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/alexandergaiser/alexgaisergit/django_react/VenvDjango/client/django-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/alexandergaiser/alexgaisergit/django_react/VenvDjango/client/django-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/alexandergaiser/alexgaisergit/django_react/VenvDjango/client/django-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/alexandergaiser/alexgaisergit/django_react/VenvDjango/client/django-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/alexandergaiser/alexgaisergit/django_react/VenvDjango/client/django-react/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Axios from 'axios';\nimport Loader from './Loader';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return Axios.get('/reddit/getsublist');\n\n            case 2:\n              response = _context.sent;\n              console.log(response.data); // const redditPosts = response.data.data.map((item)=>{\n              //     return(\n              //         <div>\n              //             <h3>{item.title}</h3>\n              //         </div>\n              //     )\n              // })\n\n              console.log(response.data);\n\n              _this.setState({\n                isLoaded: true\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.handleChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.searchData =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(event) {\n        var response, _response$data$sentim, subjectivity, polarity, sentimentData;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this.setState({\n                  isLoaded: false\n                });\n\n                event.preventDefault();\n                _context2.next = 4;\n                return Axios.get(\"/reddit/subreddit=\".concat(_this.state.searchBox));\n\n              case 4:\n                response = _context2.sent;\n                console.log(response.data);\n                _response$data$sentim = response.data.sentiment, subjectivity = _response$data$sentim.subjectivity, polarity = _response$data$sentim.polarity;\n                sentimentData = React.createElement(\"h1\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 43\n                  },\n                  __self: this\n                }, \"Polarity: \", polarity, \" | Subjectivity:\", subjectivity);\n\n                _this.setState({\n                  \"sentimentData\": sentimentData,\n                  isLoaded: true\n                });\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      isLoaded: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    // fetchData= async ()=>{\n    //     console.log('getting data')\n    //     const response = await Axios.get('/reddit/getdata')\n    //     console.log(response.data)\n    // }\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.searchData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Search By Subreddit:\"), React.createElement(\"input\", {\n        name: \"searchBox\",\n        placeholder: \"choose a subreddit\",\n        type: \"text\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Submit\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, this.state.isLoaded ? this.state.sentimentData : React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        onClick: this.fetchData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Get Data\")));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/alexandergaiser/alexgaisergit/django_react/VenvDjango/client/django-react/src/App.js"],"names":["React","Component","Axios","Loader","App","props","componentDidMount","get","response","console","log","data","setState","isLoaded","handleChange","event","target","name","value","searchData","preventDefault","state","searchBox","sentiment","subjectivity","polarity","sentimentData","fetchData"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Axios from 'axios'\nimport Loader from './Loader'\n\nclass App extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isLoaded: false\n        }\n    }\n\n    componentDidMount= async ()=>{\n        const response = await Axios.get('/reddit/getsublist')\n        console.log(response.data)\n        // const redditPosts = response.data.data.map((item)=>{\n        //     return(\n        //         <div>\n        //             <h3>{item.title}</h3>\n        //         </div>\n        //     )\n        // })\n        \n        console.log(response.data);\n        this.setState({\n            isLoaded: true\n        })\n    }\n    \n    handleChange=(event)=>{\n        const {name,value} = event.target\n        this.setState({[name]:value})\n    }\n\n    searchData = async(event) =>{\n        this.setState({isLoaded:false})\n        event.preventDefault()\n        const response = await Axios.get(`/reddit/subreddit=${this.state.searchBox}`)\n        console.log(response.data)\n        const {subjectivity, polarity} = response.data.sentiment\n        const sentimentData = <h1>Polarity: {polarity} | Subjectivity:{subjectivity}</h1>\n        this.setState({ \"sentimentData\": sentimentData,\n                        isLoaded: true\n                        })\n    }\n\n    // fetchData= async ()=>{\n    //     console.log('getting data')\n    //     const response = await Axios.get('/reddit/getdata')\n    //     console.log(response.data)\n    // }\n\nrender() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n            <form onSubmit={this.searchData}>\n            <h3>Search By Subreddit:</h3>\n                <input\n                    name = \"searchBox\" \n                    placeholder=\"choose a subreddit\" \n                    type = \"text\" \n                    onChange={this.handleChange}\n                />\n                <button>Submit</button>\n            </form>\n            <div>{this.state.isLoaded ? this.state.sentimentData : <Loader/>}</div>\n            <button onClick={this.fetchData}>Get Data</button>\n        </header>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}